spring.application.name=fiap-tech-challenge
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.sql.init.mode=never
spring.jpa.defer-datasource-initialization=false
spring.flyway.enabled=true
spring.flyway.locations=classpath:/db/migration
logging.level.org.springframework=INFO
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*
management.server.port=8081
management.endpoint.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true
spring.elasticsearch.rest.uris=http://elasticsearch:9200
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.com.fiap.tech=DEBUG
server.port=8081
spring.profiles.active=default
spring.datasource.url=jdbc:postgresql://localhost:5433/lanchonete
spring.datasource.username=postgres
spring.datasource.password=postgres

# Inicialização Lazy
spring.main.lazy-initialization=false

amqp.queues.order-created.exchange=order.events
amqp.queues.order-created.routing-key=order.created
amqp.queues.order-created.queue=order.created.queue

amqp.queues.order-payed.exchange=order.events
amqp.queues.order-payed.routing-key=order.payed
amqp.queues.order-payed.queue=order.payed.queue

amqp.queues.production-status-changed.exchange=production.events
amqp.queues.production-status-changed.routing-key=production.status-changed
amqp.queues.production-status-changed.queue=production.status-changed.queue

spring.rabbitmq.host=${AMQP_HOST:localhost}
spring.rabbitmq.port=${AMQP_PORT:5672}
spring.rabbitmq.username=${AMQP_USER:adm_order}
spring.rabbitmq.password=${AMQP_PASSWORD:123456}


# Para rodar localmente:
# spring.profiles.active=local
# spring.datasource.url=jdbc:postgresql://localhost:5432/lanchonete