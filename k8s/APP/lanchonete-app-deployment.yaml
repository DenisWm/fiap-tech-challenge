apiVersion: apps/v1
kind: Deployment
metadata:
  name: lanchonete-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: lanchonete-app
  template:
    metadata:
      labels:
        app: lanchonete-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8080"
    spec:
      containers:
        - name: lanchonete-app
          image: lanchonete-app:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: lanchonete-config
          env:
            - name: JAVA_OPTS
              value: "-Xms128m -Xmx200m -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+PrintGCDetails -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp"
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 120
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 120
            timeoutSeconds: 10
            failureThreshold: 3
          resources:
            requests:
              cpu: "250m"
              memory: "150Mi"
            limits:
              cpu: "400m"
              memory: "250Mi"