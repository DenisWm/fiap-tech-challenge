name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set permissions for Gradle Wrapper
        run: chmod +x ./gradlew

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      - name: Build Docker image
        run: docker build -t gabiponcet/lanchonete-app:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push gabiponcet/lanchonete-app:latest

      - name: Clone Kubernetes repo
        run: git clone https://gabiponcet:${{ secrets.PAT_TOKEN }}@github.com/DenisWm/infra-k8s.git k8s-repo

      - name: Copy Terraform files
        run: |
          mkdir -p k8s-repo/Terraform
          cp -R k8s/Terraform/* k8s-repo/Terraform/
          if [ -f k8s/Terraform/lambda_function_payload.zip ]; then
            cp k8s/Terraform/lambda_function_payload.zip k8s-repo/Terraform/lambda_function_payload.zip
          else
            echo "File lambda_function_payload.zip not found"
            exit 1
          fi

      - name: Update Kubernetes manifests
        run: |
          find k8s-repo -name 'deployment.yaml' -exec sed -i 's|image:.*|image: gabiponcet/lanchonete-app:latest|' {} +

      - name: Install Terraform
        run: |
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install -y terraform

      - name: Install LocalStack CLI
        run: pip install localstack

      - name: Start LocalStack with Docker
        run: |
          export LAMBDA_EXECUTOR=docker
          localstack start -d
        env:
          LAMBDA_EXECUTOR: docker

      - name: Initialize Terraform
        run: terraform init
        working-directory: k8s-repo/Terraform

      - name: Apply Terraform
        run: terraform apply -auto-approve
        working-directory: k8s-repo/Terraform

      - name: Commit and push changes to Kubernetes repo
        run: |
          cd k8s-repo
          git config --global user.email "gabiponcet@gmail.com"
          git config --global user.name "Gabriela Poncet"
          git remote set-url origin https://gabiponcet:${{ secrets.PAT_TOKEN }}@github.com/DenisWm/infra-k8s.git
          git add .
          git commit -m "Update deployment to latest image"
          git push https://gabiponcet:${{ secrets.PAT_TOKEN }}@github.com/DenisWm/infra-k8s.git HEAD:master
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}